/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pusher";
exports.ids = ["vendor-chunks/pusher"];
exports.modules = {

/***/ "(ssr)/./node_modules/pusher/lib/auth.js":
/*!*****************************************!*\
  !*** ./node_modules/pusher/lib/auth.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const util = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/pusher/lib/util.js\")\n\nfunction getSocketSignatureForUser(token, socketId, userData) {\n  const serializedUserData = JSON.stringify(userData)\n  const signature = token.sign(`${socketId}::user::${serializedUserData}`)\n  return {\n    auth: `${token.key}:${signature}`,\n    user_data: serializedUserData,\n  }\n}\n\nfunction getSocketSignature(pusher, token, channel, socketID, data) {\n  const result = {}\n\n  const signatureData = [socketID, channel]\n  if (data) {\n    const serializedData = JSON.stringify(data)\n    signatureData.push(serializedData)\n    result.channel_data = serializedData\n  }\n\n  result.auth = token.key + \":\" + token.sign(signatureData.join(\":\"))\n\n  if (util.isEncryptedChannel(channel)) {\n    if (pusher.config.encryptionMasterKey === undefined) {\n      throw new Error(\n        \"Cannot generate shared_secret because encryptionMasterKey is not set\"\n      )\n    }\n    result.shared_secret = Buffer.from(\n      pusher.channelSharedSecret(channel)\n    ).toString(\"base64\")\n  }\n\n  return result\n}\n\nexports.getSocketSignatureForUser = getSocketSignatureForUser\nexports.getSocketSignature = getSocketSignature\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9hdXRoLmpzIiwibWFwcGluZ3MiOiJBQUFBLGFBQWEsbUJBQU8sQ0FBQyx1REFBUTs7QUFFN0I7QUFDQTtBQUNBLGtDQUFrQyxTQUFTLFVBQVUsbUJBQW1CO0FBQ3hFO0FBQ0EsYUFBYSxVQUFVLEdBQUcsVUFBVTtBQUNwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxpQ0FBaUM7QUFDakMsMEJBQTBCIiwic291cmNlcyI6WyIvVXNlcnMvb2JlZGthZmZsdS9Eb2N1bWVudHMvR2l0SHViL3NlZWRjbHViL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2F1dGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcblxuZnVuY3Rpb24gZ2V0U29ja2V0U2lnbmF0dXJlRm9yVXNlcih0b2tlbiwgc29ja2V0SWQsIHVzZXJEYXRhKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZWRVc2VyRGF0YSA9IEpTT04uc3RyaW5naWZ5KHVzZXJEYXRhKVxuICBjb25zdCBzaWduYXR1cmUgPSB0b2tlbi5zaWduKGAke3NvY2tldElkfTo6dXNlcjo6JHtzZXJpYWxpemVkVXNlckRhdGF9YClcbiAgcmV0dXJuIHtcbiAgICBhdXRoOiBgJHt0b2tlbi5rZXl9OiR7c2lnbmF0dXJlfWAsXG4gICAgdXNlcl9kYXRhOiBzZXJpYWxpemVkVXNlckRhdGEsXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0U29ja2V0U2lnbmF0dXJlKHB1c2hlciwgdG9rZW4sIGNoYW5uZWwsIHNvY2tldElELCBkYXRhKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9XG5cbiAgY29uc3Qgc2lnbmF0dXJlRGF0YSA9IFtzb2NrZXRJRCwgY2hhbm5lbF1cbiAgaWYgKGRhdGEpIHtcbiAgICBjb25zdCBzZXJpYWxpemVkRGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpXG4gICAgc2lnbmF0dXJlRGF0YS5wdXNoKHNlcmlhbGl6ZWREYXRhKVxuICAgIHJlc3VsdC5jaGFubmVsX2RhdGEgPSBzZXJpYWxpemVkRGF0YVxuICB9XG5cbiAgcmVzdWx0LmF1dGggPSB0b2tlbi5rZXkgKyBcIjpcIiArIHRva2VuLnNpZ24oc2lnbmF0dXJlRGF0YS5qb2luKFwiOlwiKSlcblxuICBpZiAodXRpbC5pc0VuY3J5cHRlZENoYW5uZWwoY2hhbm5lbCkpIHtcbiAgICBpZiAocHVzaGVyLmNvbmZpZy5lbmNyeXB0aW9uTWFzdGVyS2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJDYW5ub3QgZ2VuZXJhdGUgc2hhcmVkX3NlY3JldCBiZWNhdXNlIGVuY3J5cHRpb25NYXN0ZXJLZXkgaXMgbm90IHNldFwiXG4gICAgICApXG4gICAgfVxuICAgIHJlc3VsdC5zaGFyZWRfc2VjcmV0ID0gQnVmZmVyLmZyb20oXG4gICAgICBwdXNoZXIuY2hhbm5lbFNoYXJlZFNlY3JldChjaGFubmVsKVxuICAgICkudG9TdHJpbmcoXCJiYXNlNjRcIilcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0cy5nZXRTb2NrZXRTaWduYXR1cmVGb3JVc2VyID0gZ2V0U29ja2V0U2lnbmF0dXJlRm9yVXNlclxuZXhwb3J0cy5nZXRTb2NrZXRTaWduYXR1cmUgPSBnZXRTb2NrZXRTaWduYXR1cmVcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/auth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/config.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/config.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Token = __webpack_require__(/*! ./token */ \"(ssr)/./node_modules/pusher/lib/token.js\")\nconst isBase64 = __webpack_require__(/*! is-base64 */ \"(ssr)/./node_modules/is-base64/is-base64.js\")\n\nfunction Config(options) {\n  options = options || {}\n\n  let useTLS = false\n  if (options.useTLS !== undefined && options.encrypted !== undefined) {\n    throw new Error(\n      \"Cannot set both `useTLS` and `encrypted` configuration options\"\n    )\n  } else if (options.useTLS !== undefined) {\n    useTLS = options.useTLS\n  } else if (options.encrypted !== undefined) {\n    // `encrypted` deprecated in favor of `useTLS`\n    console.warn(\"`encrypted` option is deprecated in favor of `useTLS`\")\n    useTLS = options.encrypted\n  }\n  this.scheme = options.scheme || (useTLS ? \"https\" : \"http\")\n  this.port = options.port\n\n  this.appId = options.appId\n  this.token = new Token(options.key, options.secret)\n\n  this.timeout = options.timeout\n  this.agent = options.agent\n\n  // Handle deprecated raw 32 byte string as key\n  if (options.encryptionMasterKey !== undefined) {\n    if (options.encryptionMasterKeyBase64 !== undefined) {\n      throw new Error(\n        \"Do not specify both encryptionMasterKey and encryptionMasterKeyBase64. \" +\n          \"encryptionMasterKey is deprecated, please specify only encryptionMasterKeyBase64.\"\n      )\n    }\n    console.warn(\n      \"`encryptionMasterKey` option is deprecated in favor of `encryptionMasterKeyBase64`\"\n    )\n    if (typeof options.encryptionMasterKey !== \"string\") {\n      throw new Error(\"encryptionMasterKey must be a string\")\n    }\n    if (options.encryptionMasterKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKey must be 32 bytes long, but the string '\" +\n          options.encryptionMasterKey +\n          \"' is \" +\n          options.encryptionMasterKey.length +\n          \" bytes long\"\n      )\n    }\n\n    this.encryptionMasterKey = Buffer.from(options.encryptionMasterKey)\n  }\n\n  // Handle base64 encoded 32 byte key to encourage use of the full range of byte values\n  if (options.encryptionMasterKeyBase64 !== undefined) {\n    if (typeof options.encryptionMasterKeyBase64 !== \"string\") {\n      throw new Error(\"encryptionMasterKeyBase64 must be a string\")\n    }\n    if (!isBase64(options.encryptionMasterKeyBase64)) {\n      throw new Error(\"encryptionMasterKeyBase64 must be valid base64\")\n    }\n\n    const decodedKey = Buffer.from(options.encryptionMasterKeyBase64, \"base64\")\n    if (decodedKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKeyBase64 must decode to 32 bytes, but the string \" +\n          options.encryptionMasterKeyBase64 +\n          \"' decodes to \" +\n          decodedKey.length +\n          \" bytes\"\n      )\n    }\n\n    this.encryptionMasterKey = decodedKey\n  }\n}\n\nConfig.prototype.prefixPath = function () {\n  throw \"NotImplementedError: #prefixPath should be implemented by subclasses\"\n}\n\nConfig.prototype.getBaseURL = function () {\n  const port = this.port ? \":\" + this.port : \"\"\n  return this.scheme + \"://\" + this.host + port\n}\n\nmodule.exports = Config\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxtQkFBTyxDQUFDLHlEQUFTO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLDhEQUFXOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvb2JlZGthZmZsdS9Eb2N1bWVudHMvR2l0SHViL3NlZWRjbHViL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2NvbmZpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBUb2tlbiA9IHJlcXVpcmUoXCIuL3Rva2VuXCIpXG5jb25zdCBpc0Jhc2U2NCA9IHJlcXVpcmUoXCJpcy1iYXNlNjRcIilcblxuZnVuY3Rpb24gQ29uZmlnKG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICBsZXQgdXNlVExTID0gZmFsc2VcbiAgaWYgKG9wdGlvbnMudXNlVExTICE9PSB1bmRlZmluZWQgJiYgb3B0aW9ucy5lbmNyeXB0ZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiQ2Fubm90IHNldCBib3RoIGB1c2VUTFNgIGFuZCBgZW5jcnlwdGVkYCBjb25maWd1cmF0aW9uIG9wdGlvbnNcIlxuICAgIClcbiAgfSBlbHNlIGlmIChvcHRpb25zLnVzZVRMUyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdXNlVExTID0gb3B0aW9ucy51c2VUTFNcbiAgfSBlbHNlIGlmIChvcHRpb25zLmVuY3J5cHRlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgLy8gYGVuY3J5cHRlZGAgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiBgdXNlVExTYFxuICAgIGNvbnNvbGUud2FybihcImBlbmNyeXB0ZWRgIG9wdGlvbiBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIGB1c2VUTFNgXCIpXG4gICAgdXNlVExTID0gb3B0aW9ucy5lbmNyeXB0ZWRcbiAgfVxuICB0aGlzLnNjaGVtZSA9IG9wdGlvbnMuc2NoZW1lIHx8ICh1c2VUTFMgPyBcImh0dHBzXCIgOiBcImh0dHBcIilcbiAgdGhpcy5wb3J0ID0gb3B0aW9ucy5wb3J0XG5cbiAgdGhpcy5hcHBJZCA9IG9wdGlvbnMuYXBwSWRcbiAgdGhpcy50b2tlbiA9IG5ldyBUb2tlbihvcHRpb25zLmtleSwgb3B0aW9ucy5zZWNyZXQpXG5cbiAgdGhpcy50aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0XG4gIHRoaXMuYWdlbnQgPSBvcHRpb25zLmFnZW50XG5cbiAgLy8gSGFuZGxlIGRlcHJlY2F0ZWQgcmF3IDMyIGJ5dGUgc3RyaW5nIGFzIGtleVxuICBpZiAob3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAob3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJEbyBub3Qgc3BlY2lmeSBib3RoIGVuY3J5cHRpb25NYXN0ZXJLZXkgYW5kIGVuY3J5cHRpb25NYXN0ZXJLZXlCYXNlNjQuIFwiICtcbiAgICAgICAgICBcImVuY3J5cHRpb25NYXN0ZXJLZXkgaXMgZGVwcmVjYXRlZCwgcGxlYXNlIHNwZWNpZnkgb25seSBlbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0LlwiXG4gICAgICApXG4gICAgfVxuICAgIGNvbnNvbGUud2FybihcbiAgICAgIFwiYGVuY3J5cHRpb25NYXN0ZXJLZXlgIG9wdGlvbiBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIGBlbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0YFwiXG4gICAgKVxuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJlbmNyeXB0aW9uTWFzdGVyS2V5IG11c3QgYmUgYSBzdHJpbmdcIilcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleS5sZW5ndGggIT09IDMyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiZW5jcnlwdGlvbk1hc3RlcktleSBtdXN0IGJlIDMyIGJ5dGVzIGxvbmcsIGJ1dCB0aGUgc3RyaW5nICdcIiArXG4gICAgICAgICAgb3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5ICtcbiAgICAgICAgICBcIicgaXMgXCIgK1xuICAgICAgICAgIG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleS5sZW5ndGggK1xuICAgICAgICAgIFwiIGJ5dGVzIGxvbmdcIlxuICAgICAgKVxuICAgIH1cblxuICAgIHRoaXMuZW5jcnlwdGlvbk1hc3RlcktleSA9IEJ1ZmZlci5mcm9tKG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleSlcbiAgfVxuXG4gIC8vIEhhbmRsZSBiYXNlNjQgZW5jb2RlZCAzMiBieXRlIGtleSB0byBlbmNvdXJhZ2UgdXNlIG9mIHRoZSBmdWxsIHJhbmdlIG9mIGJ5dGUgdmFsdWVzXG4gIGlmIChvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXlCYXNlNjQgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmICh0eXBlb2Ygb3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJlbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0IG11c3QgYmUgYSBzdHJpbmdcIilcbiAgICB9XG4gICAgaWYgKCFpc0Jhc2U2NChvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXlCYXNlNjQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJlbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0IG11c3QgYmUgdmFsaWQgYmFzZTY0XCIpXG4gICAgfVxuXG4gICAgY29uc3QgZGVjb2RlZEtleSA9IEJ1ZmZlci5mcm9tKG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCwgXCJiYXNlNjRcIilcbiAgICBpZiAoZGVjb2RlZEtleS5sZW5ndGggIT09IDMyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCBtdXN0IGRlY29kZSB0byAzMiBieXRlcywgYnV0IHRoZSBzdHJpbmcgXCIgK1xuICAgICAgICAgIG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCArXG4gICAgICAgICAgXCInIGRlY29kZXMgdG8gXCIgK1xuICAgICAgICAgIGRlY29kZWRLZXkubGVuZ3RoICtcbiAgICAgICAgICBcIiBieXRlc1wiXG4gICAgICApXG4gICAgfVxuXG4gICAgdGhpcy5lbmNyeXB0aW9uTWFzdGVyS2V5ID0gZGVjb2RlZEtleVxuICB9XG59XG5cbkNvbmZpZy5wcm90b3R5cGUucHJlZml4UGF0aCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhyb3cgXCJOb3RJbXBsZW1lbnRlZEVycm9yOiAjcHJlZml4UGF0aCBzaG91bGQgYmUgaW1wbGVtZW50ZWQgYnkgc3ViY2xhc3Nlc1wiXG59XG5cbkNvbmZpZy5wcm90b3R5cGUuZ2V0QmFzZVVSTCA9IGZ1bmN0aW9uICgpIHtcbiAgY29uc3QgcG9ydCA9IHRoaXMucG9ydCA/IFwiOlwiICsgdGhpcy5wb3J0IDogXCJcIlxuICByZXR1cm4gdGhpcy5zY2hlbWUgKyBcIjovL1wiICsgdGhpcy5ob3N0ICsgcG9ydFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbmZpZ1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/errors.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/errors.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/** Contains information about an HTTP request error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} url request URL\n * @param [error] optional error cause\n * @param {Integer} [status] response status code, if received\n * @param {String} [body] response body, if received\n */\nfunction RequestError(message, url, error, status, body) {\n  this.name = \"PusherRequestError\"\n  this.stack = new Error().stack\n\n  /** @member {String} error message */\n  this.message = message\n  /** @member {String} request URL */\n  this.url = url\n  /** @member optional error cause */\n  this.error = error\n  /** @member {Integer} response status code, if received */\n  this.status = status\n  /** @member {String} response body, if received */\n  this.body = body\n}\nRequestError.prototype = new Error()\n\n/** Contains information about a WebHook error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} contentType WebHook content type\n * @param {String} body WebHook body\n * @param {String} signature WebHook signature\n */\nfunction WebHookError(message, contentType, body, signature) {\n  this.name = \"PusherWebHookError\"\n  this.stack = new Error().stack\n\n  /** @member {String} error message */\n  this.message = message\n  /** @member {String} WebHook content type */\n  this.contentType = contentType\n  /** @member {String} WebHook body */\n  this.body = body\n  /** @member {String} WebHook signature */\n  this.signature = signature\n}\nWebHookError.prototype = new Error()\n\nexports.RequestError = RequestError\nexports.WebHookError = WebHookError\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBOztBQUVBLG9CQUFvQjtBQUNwQixvQkFBb0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vYmVka2FmZmx1L0RvY3VtZW50cy9HaXRIdWIvc2VlZGNsdWIvbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCBhbiBIVFRQIHJlcXVlc3QgZXJyb3IuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBFcnJvclxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgZXJyb3IgbWVzc2FnZVxuICogQHBhcmFtIHtTdHJpbmd9IHVybCByZXF1ZXN0IFVSTFxuICogQHBhcmFtIFtlcnJvcl0gb3B0aW9uYWwgZXJyb3IgY2F1c2VcbiAqIEBwYXJhbSB7SW50ZWdlcn0gW3N0YXR1c10gcmVzcG9uc2Ugc3RhdHVzIGNvZGUsIGlmIHJlY2VpdmVkXG4gKiBAcGFyYW0ge1N0cmluZ30gW2JvZHldIHJlc3BvbnNlIGJvZHksIGlmIHJlY2VpdmVkXG4gKi9cbmZ1bmN0aW9uIFJlcXVlc3RFcnJvcihtZXNzYWdlLCB1cmwsIGVycm9yLCBzdGF0dXMsIGJvZHkpIHtcbiAgdGhpcy5uYW1lID0gXCJQdXNoZXJSZXF1ZXN0RXJyb3JcIlxuICB0aGlzLnN0YWNrID0gbmV3IEVycm9yKCkuc3RhY2tcblxuICAvKiogQG1lbWJlciB7U3RyaW5nfSBlcnJvciBtZXNzYWdlICovXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2VcbiAgLyoqIEBtZW1iZXIge1N0cmluZ30gcmVxdWVzdCBVUkwgKi9cbiAgdGhpcy51cmwgPSB1cmxcbiAgLyoqIEBtZW1iZXIgb3B0aW9uYWwgZXJyb3IgY2F1c2UgKi9cbiAgdGhpcy5lcnJvciA9IGVycm9yXG4gIC8qKiBAbWVtYmVyIHtJbnRlZ2VyfSByZXNwb25zZSBzdGF0dXMgY29kZSwgaWYgcmVjZWl2ZWQgKi9cbiAgdGhpcy5zdGF0dXMgPSBzdGF0dXNcbiAgLyoqIEBtZW1iZXIge1N0cmluZ30gcmVzcG9uc2UgYm9keSwgaWYgcmVjZWl2ZWQgKi9cbiAgdGhpcy5ib2R5ID0gYm9keVxufVxuUmVxdWVzdEVycm9yLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpXG5cbi8qKiBDb250YWlucyBpbmZvcm1hdGlvbiBhYm91dCBhIFdlYkhvb2sgZXJyb3IuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAZXh0ZW5kcyBFcnJvclxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgZXJyb3IgbWVzc2FnZVxuICogQHBhcmFtIHtTdHJpbmd9IGNvbnRlbnRUeXBlIFdlYkhvb2sgY29udGVudCB0eXBlXG4gKiBAcGFyYW0ge1N0cmluZ30gYm9keSBXZWJIb29rIGJvZHlcbiAqIEBwYXJhbSB7U3RyaW5nfSBzaWduYXR1cmUgV2ViSG9vayBzaWduYXR1cmVcbiAqL1xuZnVuY3Rpb24gV2ViSG9va0Vycm9yKG1lc3NhZ2UsIGNvbnRlbnRUeXBlLCBib2R5LCBzaWduYXR1cmUpIHtcbiAgdGhpcy5uYW1lID0gXCJQdXNoZXJXZWJIb29rRXJyb3JcIlxuICB0aGlzLnN0YWNrID0gbmV3IEVycm9yKCkuc3RhY2tcblxuICAvKiogQG1lbWJlciB7U3RyaW5nfSBlcnJvciBtZXNzYWdlICovXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2VcbiAgLyoqIEBtZW1iZXIge1N0cmluZ30gV2ViSG9vayBjb250ZW50IHR5cGUgKi9cbiAgdGhpcy5jb250ZW50VHlwZSA9IGNvbnRlbnRUeXBlXG4gIC8qKiBAbWVtYmVyIHtTdHJpbmd9IFdlYkhvb2sgYm9keSAqL1xuICB0aGlzLmJvZHkgPSBib2R5XG4gIC8qKiBAbWVtYmVyIHtTdHJpbmd9IFdlYkhvb2sgc2lnbmF0dXJlICovXG4gIHRoaXMuc2lnbmF0dXJlID0gc2lnbmF0dXJlXG59XG5XZWJIb29rRXJyb3IucHJvdG90eXBlID0gbmV3IEVycm9yKClcblxuZXhwb3J0cy5SZXF1ZXN0RXJyb3IgPSBSZXF1ZXN0RXJyb3JcbmV4cG9ydHMuV2ViSG9va0Vycm9yID0gV2ViSG9va0Vycm9yXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/events.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/events.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const util = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/pusher/lib/util.js\")\nconst nacl = __webpack_require__(/*! tweetnacl */ \"(ssr)/./node_modules/tweetnacl/nacl-fast.js\")\nconst naclUtil = __webpack_require__(/*! tweetnacl-util */ \"(ssr)/./node_modules/tweetnacl-util/nacl-util.js\")\n\nfunction encrypt(pusher, channel, data) {\n  if (pusher.config.encryptionMasterKey === undefined) {\n    throw new Error(\n      \"Set encryptionMasterKey before triggering events on encrypted channels\"\n    )\n  }\n\n  const nonceBytes = nacl.randomBytes(24)\n\n  const ciphertextBytes = nacl.secretbox(\n    naclUtil.decodeUTF8(JSON.stringify(data)),\n    nonceBytes,\n    pusher.channelSharedSecret(channel)\n  )\n\n  return JSON.stringify({\n    nonce: naclUtil.encodeBase64(nonceBytes),\n    ciphertext: naclUtil.encodeBase64(ciphertextBytes),\n  })\n}\n\nexports.trigger = function (pusher, channels, eventName, data, params) {\n  if (channels.length === 1 && util.isEncryptedChannel(channels[0])) {\n    const channel = channels[0]\n    const event = {\n      name: eventName,\n      data: encrypt(pusher, channel, data),\n      channels: [channel],\n      ...params,\n    }\n    return pusher.post({ path: \"/events\", body: event })\n  } else {\n    for (let i = 0; i < channels.length; i++) {\n      if (util.isEncryptedChannel(channels[i])) {\n        // For rationale, see limitations of end-to-end encryption in the README\n        throw new Error(\n          \"You cannot trigger to multiple channels when using encrypted channels\"\n        )\n      }\n    }\n\n    const event = {\n      name: eventName,\n      data: ensureJSON(data),\n      channels: channels,\n      ...params,\n    }\n    return pusher.post({ path: \"/events\", body: event })\n  }\n}\n\nexports.triggerBatch = function (pusher, batch) {\n  for (let i = 0; i < batch.length; i++) {\n    batch[i].data = util.isEncryptedChannel(batch[i].channel)\n      ? encrypt(pusher, batch[i].channel, batch[i].data)\n      : ensureJSON(batch[i].data)\n  }\n  return pusher.post({ path: \"/batch_events\", body: { batch: batch } })\n}\n\nfunction ensureJSON(data) {\n  return typeof data === \"string\" ? data : JSON.stringify(data)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9ldmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQUEsYUFBYSxtQkFBTyxDQUFDLHVEQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyw4REFBVztBQUNoQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBZ0I7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw4QkFBOEI7QUFDdkQsSUFBSTtBQUNKLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDhCQUE4QjtBQUN2RDtBQUNBOztBQUVBLG9CQUFvQjtBQUNwQixrQkFBa0Isa0JBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLCtCQUErQixnQkFBZ0I7QUFDdEU7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvb2JlZGthZmZsdS9Eb2N1bWVudHMvR2l0SHViL3NlZWRjbHViL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2V2ZW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKVxuY29uc3QgbmFjbCA9IHJlcXVpcmUoXCJ0d2VldG5hY2xcIilcbmNvbnN0IG5hY2xVdGlsID0gcmVxdWlyZShcInR3ZWV0bmFjbC11dGlsXCIpXG5cbmZ1bmN0aW9uIGVuY3J5cHQocHVzaGVyLCBjaGFubmVsLCBkYXRhKSB7XG4gIGlmIChwdXNoZXIuY29uZmlnLmVuY3J5cHRpb25NYXN0ZXJLZXkgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiU2V0IGVuY3J5cHRpb25NYXN0ZXJLZXkgYmVmb3JlIHRyaWdnZXJpbmcgZXZlbnRzIG9uIGVuY3J5cHRlZCBjaGFubmVsc1wiXG4gICAgKVxuICB9XG5cbiAgY29uc3Qgbm9uY2VCeXRlcyA9IG5hY2wucmFuZG9tQnl0ZXMoMjQpXG5cbiAgY29uc3QgY2lwaGVydGV4dEJ5dGVzID0gbmFjbC5zZWNyZXRib3goXG4gICAgbmFjbFV0aWwuZGVjb2RlVVRGOChKU09OLnN0cmluZ2lmeShkYXRhKSksXG4gICAgbm9uY2VCeXRlcyxcbiAgICBwdXNoZXIuY2hhbm5lbFNoYXJlZFNlY3JldChjaGFubmVsKVxuICApXG5cbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICBub25jZTogbmFjbFV0aWwuZW5jb2RlQmFzZTY0KG5vbmNlQnl0ZXMpLFxuICAgIGNpcGhlcnRleHQ6IG5hY2xVdGlsLmVuY29kZUJhc2U2NChjaXBoZXJ0ZXh0Qnl0ZXMpLFxuICB9KVxufVxuXG5leHBvcnRzLnRyaWdnZXIgPSBmdW5jdGlvbiAocHVzaGVyLCBjaGFubmVscywgZXZlbnROYW1lLCBkYXRhLCBwYXJhbXMpIHtcbiAgaWYgKGNoYW5uZWxzLmxlbmd0aCA9PT0gMSAmJiB1dGlsLmlzRW5jcnlwdGVkQ2hhbm5lbChjaGFubmVsc1swXSkpIHtcbiAgICBjb25zdCBjaGFubmVsID0gY2hhbm5lbHNbMF1cbiAgICBjb25zdCBldmVudCA9IHtcbiAgICAgIG5hbWU6IGV2ZW50TmFtZSxcbiAgICAgIGRhdGE6IGVuY3J5cHQocHVzaGVyLCBjaGFubmVsLCBkYXRhKSxcbiAgICAgIGNoYW5uZWxzOiBbY2hhbm5lbF0sXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfVxuICAgIHJldHVybiBwdXNoZXIucG9zdCh7IHBhdGg6IFwiL2V2ZW50c1wiLCBib2R5OiBldmVudCB9KVxuICB9IGVsc2Uge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhbm5lbHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh1dGlsLmlzRW5jcnlwdGVkQ2hhbm5lbChjaGFubmVsc1tpXSkpIHtcbiAgICAgICAgLy8gRm9yIHJhdGlvbmFsZSwgc2VlIGxpbWl0YXRpb25zIG9mIGVuZC10by1lbmQgZW5jcnlwdGlvbiBpbiB0aGUgUkVBRE1FXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIllvdSBjYW5ub3QgdHJpZ2dlciB0byBtdWx0aXBsZSBjaGFubmVscyB3aGVuIHVzaW5nIGVuY3J5cHRlZCBjaGFubmVsc1wiXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBldmVudCA9IHtcbiAgICAgIG5hbWU6IGV2ZW50TmFtZSxcbiAgICAgIGRhdGE6IGVuc3VyZUpTT04oZGF0YSksXG4gICAgICBjaGFubmVsczogY2hhbm5lbHMsXG4gICAgICAuLi5wYXJhbXMsXG4gICAgfVxuICAgIHJldHVybiBwdXNoZXIucG9zdCh7IHBhdGg6IFwiL2V2ZW50c1wiLCBib2R5OiBldmVudCB9KVxuICB9XG59XG5cbmV4cG9ydHMudHJpZ2dlckJhdGNoID0gZnVuY3Rpb24gKHB1c2hlciwgYmF0Y2gpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBiYXRjaC5sZW5ndGg7IGkrKykge1xuICAgIGJhdGNoW2ldLmRhdGEgPSB1dGlsLmlzRW5jcnlwdGVkQ2hhbm5lbChiYXRjaFtpXS5jaGFubmVsKVxuICAgICAgPyBlbmNyeXB0KHB1c2hlciwgYmF0Y2hbaV0uY2hhbm5lbCwgYmF0Y2hbaV0uZGF0YSlcbiAgICAgIDogZW5zdXJlSlNPTihiYXRjaFtpXS5kYXRhKVxuICB9XG4gIHJldHVybiBwdXNoZXIucG9zdCh7IHBhdGg6IFwiL2JhdGNoX2V2ZW50c1wiLCBib2R5OiB7IGJhdGNoOiBiYXRjaCB9IH0pXG59XG5cbmZ1bmN0aW9uIGVuc3VyZUpTT04oZGF0YSkge1xuICByZXR1cm4gdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgPyBkYXRhIDogSlNPTi5zdHJpbmdpZnkoZGF0YSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/pusher.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/pusher.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const crypto = __webpack_require__(/*! crypto */ \"crypto\")\nconst url = __webpack_require__(/*! url */ \"url\")\n\nconst auth = __webpack_require__(/*! ./auth */ \"(ssr)/./node_modules/pusher/lib/auth.js\")\nconst errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/pusher/lib/errors.js\")\nconst events = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/pusher/lib/events.js\")\nconst requests = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/pusher/lib/requests.js\")\n\nconst PusherConfig = __webpack_require__(/*! ./pusher_config */ \"(ssr)/./node_modules/pusher/lib/pusher_config.js\")\nconst Token = __webpack_require__(/*! ./token */ \"(ssr)/./node_modules/pusher/lib/token.js\")\nconst WebHook = __webpack_require__(/*! ./webhook */ \"(ssr)/./node_modules/pusher/lib/webhook.js\")\n\nconst validateChannel = function (channel) {\n  if (\n    typeof channel !== \"string\" ||\n    channel === \"\" ||\n    channel.match(/[^A-Za-z0-9_\\-=@,.;]/)\n  ) {\n    throw new Error(\"Invalid channel name: '\" + channel + \"'\")\n  }\n  if (channel.length > 200) {\n    throw new Error(\"Channel name too long: '\" + channel + \"'\")\n  }\n}\n\nconst validateSocketId = function (socketId) {\n  if (\n    typeof socketId !== \"string\" ||\n    socketId === \"\" ||\n    !socketId.match(/^\\d+\\.\\d+$/)\n  ) {\n    throw new Error(\"Invalid socket id: '\" + socketId + \"'\")\n  }\n}\n\nconst validateUserId = function (userId) {\n  if (typeof userId !== \"string\" || userId === \"\") {\n    throw new Error(\"Invalid user id: '\" + userId + \"'\")\n  }\n}\n\nconst validateUserData = function (userData) {\n  if (userData == null || typeof userData !== \"object\") {\n    throw new Error(\"Invalid user data: '\" + userData + \"'\")\n  }\n  validateUserId(userData.id)\n}\n\n/** Provides access to Pusher's REST API, WebHooks and authentication.\n *\n * @constructor\n * @param {Object} options\n * @param {String} [options.host=\"api.pusherapp.com\"] API hostname\n * @param {Boolean} [options.useTLS=false] whether to use TLS\n * @param {Boolean} [options.encrypted=false] deprecated; renamed to `useTLS`\n * @param {Integer} [options.port] port, default depends on the scheme\n * @param {Integer} options.appId application ID\n * @param {String} options.key application key\n * @param {String} options.secret application secret\n * @param {Integer} [options.timeout] request timeout in milliseconds\n * @param {Agent} [options.agent] http agent to use\n */\nfunction Pusher(options) {\n  this.config = new PusherConfig(options)\n}\n\n/** Create a Pusher instance using a URL.\n *\n * URL should be in SCHEME://APP_KEY:SECRET_KEY@HOST:PORT/apps/APP_ID form.\n *\n * @param {String} pusherUrl URL containing endpoint and app details\n * @param {Object} [options] options, see the {@link Pusher} for details\n * @returns {Pusher} instance configured for the URL and options\n */\nPusher.forURL = function (pusherUrl, options) {\n  const apiUrl = url.parse(pusherUrl)\n  const apiPath = apiUrl.pathname.split(\"/\")\n  const apiAuth = apiUrl.auth.split(\":\")\n\n  return new Pusher(\n    Object.assign({}, options || {}, {\n      scheme: apiUrl.protocol.replace(/:$/, \"\"),\n      host: apiUrl.hostname,\n      port: parseInt(apiUrl.port, 10) || undefined,\n      appId: parseInt(apiPath[apiPath.length - 1], 10),\n      key: apiAuth[0],\n      secret: apiAuth[1],\n    })\n  )\n}\n\n/** Create a Pusher instance using a cluster name.\n *\n * @param {String} cluster cluster name\n * @param {Object} [options] options, see the {@link Pusher} for details\n * @returns {Pusher} instance configured for the cluster and options\n */\nPusher.forCluster = function (cluster, options) {\n  return new Pusher(\n    Object.assign({}, options || {}, {\n      host: \"api-\" + cluster + \".pusher.com\",\n    })\n  )\n}\n\n/** Returns a signature for given socket id, channel and socket data.\n *\n * @param {String} socketId socket id\n * @param {String} channel channel name\n * @param {Object} [data] additional socket data\n * @returns {String} authorization signature\n */\nPusher.prototype.authorizeChannel = function (socketId, channel, data) {\n  validateSocketId(socketId)\n  validateChannel(channel)\n\n  return auth.getSocketSignature(\n    this,\n    this.config.token,\n    channel,\n    socketId,\n    data\n  )\n}\n\n/** Returns a signature for given socket id, channel and socket data.\n *\n *  DEPRECATED. Use authorizeChannel.\n *\n * @param {String} socketId socket id\n * @param {String} channel channel name\n * @param {Object} [data] additional socket data\n * @returns {String} authorization signature\n */\nPusher.prototype.authenticate = Pusher.prototype.authorizeChannel\n\n/** Returns a signature for given socket id and user data.\n *\n * @param {String} socketId socket id\n * @param {Object} userData user data\n * @returns {String} authentication signature\n */\nPusher.prototype.authenticateUser = function (socketId, userData) {\n  validateSocketId(socketId)\n  validateUserData(userData)\n\n  return auth.getSocketSignatureForUser(this.config.token, socketId, userData)\n}\n\n/** Sends an event to a user.\n *\n * Event name can be at most 200 characters long.\n *\n * @param {String} userId user id\n * @param {String} event event name\n * @param data event data, objects are JSON-encoded\n * @returns {Promise} a promise resolving to a response, or rejecting to a RequestError.\n * @see RequestError\n */\nPusher.prototype.sendToUser = function (userId, event, data) {\n  if (event.length > 200) {\n    throw new Error(\"Too long event name: '\" + event + \"'\")\n  }\n  validateUserId(userId)\n  return events.trigger(this, [`#server-to-user-${userId}`], event, data)\n}\n\n/** Terminate users's connections.\n *\n *\n * @param {String} userId user id\n * @returns {Promise} a promise resolving to a response, or rejecting to a RequestError.\n * @see RequestError\n */\nPusher.prototype.terminateUserConnections = function (userId) {\n  validateUserId(userId)\n  return this.post({ path: `/users/${userId}/terminate_connections`, body: {} })\n}\n\n/** Triggers an event.\n *\n * Channel names can contain only characters which are alphanumeric, '_' or '-'\n * and have to be at most 200 characters long.\n *\n * Event name can be at most 200 characters long.\n *\n * Returns a promise resolving to a response, or rejecting to a RequestError.\n *\n * @param {String|String[]} channel list of at most 100 channels\n * @param {String} event event name\n * @param data event data, objects are JSON-encoded\n * @param {Object} [params] additional optional request body parameters\n * @param {String} [params.socket_id] id of a socket that should not receive the event\n * @param {String} [params.info] a comma separate list of attributes to be returned in the response. Experimental, see https://pusher.com/docs/lab#experimental-program\n * @see RequestError\n */\nPusher.prototype.trigger = function (channels, event, data, params) {\n  if (params && params.socket_id) {\n    validateSocketId(params.socket_id)\n  }\n  if (!(channels instanceof Array)) {\n    // add single channel to array for multi trigger compatibility\n    channels = [channels]\n  }\n  if (event.length > 200) {\n    throw new Error(\"Too long event name: '\" + event + \"'\")\n  }\n  if (channels.length > 100) {\n    throw new Error(\"Can't trigger a message to more than 100 channels\")\n  }\n  for (let i = 0; i < channels.length; i++) {\n    validateChannel(channels[i])\n  }\n  return events.trigger(this, channels, event, data, params)\n}\n\n/* Triggers a batch of events\n *\n * @param {Event[]} An array of events, where Event is\n * {\n *   name: string,\n *   channel: string,\n *   data: any JSON-encodable data,\n *   socket_id: [optional] string,\n *   info: [optional] string experimental, see https://pusher.com/docs/lab#experimental-program\n * }\n */\nPusher.prototype.triggerBatch = function (batch) {\n  return events.triggerBatch(this, batch)\n}\n\n/** Makes a POST request to Pusher, handles the authentication.\n *\n * Returns a promise resolving to a response, or rejecting to a RequestError.\n *\n * @param {Object} options\n * @param {String} options.path request path\n * @param {Object} options.params query params\n * @param {String} options.body request body\n * @see RequestError\n */\nPusher.prototype.post = function (options) {\n  return requests.send(\n    this.config,\n    Object.assign({}, options, { method: \"POST\" })\n  )\n}\n\n/** Makes a GET request to Pusher, handles the authentication.\n *\n * Returns a promise resolving to a response, or rejecting to a RequestError.\n *\n * @param {Object} options\n * @param {String} options.path request path\n * @param {Object} options.params query params\n * @see RequestError\n */\nPusher.prototype.get = function (options) {\n  return requests.send(\n    this.config,\n    Object.assign({}, options, { method: \"GET\" })\n  )\n}\n\n/** Creates a WebHook object for a given request.\n *\n * @param {Object} request\n * @param {Object} request.headers WebHook HTTP headers with lower-case keys\n * @param {String} request.rawBody raw WebHook body\n * @returns {WebHook}\n */\nPusher.prototype.webhook = function (request) {\n  return new WebHook(this.config.token, request)\n}\n\n/** Builds a signed query string that can be used in a request to Pusher.\n *\n * @param {Object} options\n * @param {String} options.method request method\n * @param {String} options.path request path\n * @param {Object} options.params query params\n * @param {String} options.body request body\n * @returns {String} signed query string\n */\nPusher.prototype.createSignedQueryString = function (options) {\n  return requests.createSignedQueryString(this.config.token, options)\n}\n\nPusher.prototype.channelSharedSecret = function (channel) {\n  return crypto\n    .createHash(\"sha256\")\n    .update(\n      Buffer.concat([Buffer.from(channel), this.config.encryptionMasterKey])\n    )\n    .digest()\n}\n\n/** Exported {@link Token} constructor. */\nPusher.Token = Token\n/** Exported {@link RequestError} constructor. */\nPusher.RequestError = errors.RequestError\n/** Exported {@link WebHookError} constructor. */\nPusher.WebHookError = errors.WebHookError\n\nmodule.exports = Pusher\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/pusher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/pusher_config.js":
/*!**************************************************!*\
  !*** ./node_modules/pusher/lib/pusher_config.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Config = __webpack_require__(/*! ./config */ \"(ssr)/./node_modules/pusher/lib/config.js\")\n\nfunction PusherConfig(options) {\n  Config.call(this, options)\n\n  if (options.host) {\n    this.host = options.host\n  } else if (options.cluster) {\n    this.host = \"api-\" + options.cluster + \".pusher.com\"\n  } else {\n    this.host = \"api.pusherapp.com\"\n  }\n}\n\nObject.assign(PusherConfig.prototype, Config.prototype)\n\nPusherConfig.prototype.prefixPath = function (subPath) {\n  return \"/apps/\" + this.appId + subPath\n}\n\nmodule.exports = PusherConfig\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9wdXNoZXJfY29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQywyREFBVTs7QUFFakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vYmVka2FmZmx1L0RvY3VtZW50cy9HaXRIdWIvc2VlZGNsdWIvbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvcHVzaGVyX2NvbmZpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDb25maWcgPSByZXF1aXJlKFwiLi9jb25maWdcIilcblxuZnVuY3Rpb24gUHVzaGVyQ29uZmlnKG9wdGlvbnMpIHtcbiAgQ29uZmlnLmNhbGwodGhpcywgb3B0aW9ucylcblxuICBpZiAob3B0aW9ucy5ob3N0KSB7XG4gICAgdGhpcy5ob3N0ID0gb3B0aW9ucy5ob3N0XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5jbHVzdGVyKSB7XG4gICAgdGhpcy5ob3N0ID0gXCJhcGktXCIgKyBvcHRpb25zLmNsdXN0ZXIgKyBcIi5wdXNoZXIuY29tXCJcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmhvc3QgPSBcImFwaS5wdXNoZXJhcHAuY29tXCJcbiAgfVxufVxuXG5PYmplY3QuYXNzaWduKFB1c2hlckNvbmZpZy5wcm90b3R5cGUsIENvbmZpZy5wcm90b3R5cGUpXG5cblB1c2hlckNvbmZpZy5wcm90b3R5cGUucHJlZml4UGF0aCA9IGZ1bmN0aW9uIChzdWJQYXRoKSB7XG4gIHJldHVybiBcIi9hcHBzL1wiICsgdGhpcy5hcHBJZCArIHN1YlBhdGhcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQdXNoZXJDb25maWdcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/pusher_config.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/requests.js":
/*!*********************************************!*\
  !*** ./node_modules/pusher/lib/requests.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("// Redundant default as a workaround for this WebPack bug:\n// https://github.com/webpack/webpack/issues/4742\nconst fetch = (__webpack_require__(/*! node-fetch */ \"(ssr)/./node_modules/node-fetch/lib/index.mjs\")[\"default\"])\nconst AbortController = (__webpack_require__(/*! abort-controller */ \"(ssr)/./node_modules/abort-controller/dist/abort-controller.js\")[\"default\"])\n\nconst errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/pusher/lib/errors.js\")\nconst util = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/pusher/lib/util.js\")\n\nconst pusherLibraryVersion = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/pusher/lib/version.js\")\n\nconst RESERVED_QUERY_KEYS = {\n  auth_key: true,\n  auth_timestamp: true,\n  auth_version: true,\n  auth_signature: true,\n  body_md5: true,\n}\n\nfunction send(config, options) {\n  const method = options.method\n  const path = config.prefixPath(options.path)\n  const body = options.body ? JSON.stringify(options.body) : undefined\n\n  const url = `${config.getBaseURL()}${path}?${createSignedQueryString(\n    config.token,\n    {\n      method,\n      path,\n      params: options.params,\n      body: body,\n    }\n  )}`\n\n  const headers = {\n    \"x-pusher-library\": \"pusher-http-node \" + pusherLibraryVersion,\n  }\n\n  if (body) {\n    headers[\"content-type\"] = \"application/json\"\n  }\n\n  let signal\n  let timeout\n  if (config.timeout) {\n    const controller = new AbortController()\n    timeout = setTimeout(() => controller.abort(), config.timeout)\n    signal = controller.signal\n  }\n\n  return fetch(url, {\n    method,\n    body,\n    headers,\n    signal,\n    agent: config.agent,\n  }).then(\n    (res) => {\n      clearTimeout(timeout)\n      if (res.status >= 400) {\n        return res.text().then((body) => {\n          throw new errors.RequestError(\n            \"Unexpected status code \" + res.status,\n            url,\n            undefined,\n            res.status,\n            body\n          )\n        })\n      }\n      return res\n    },\n    (err) => {\n      clearTimeout(timeout)\n      throw new errors.RequestError(\"Request failed with an error\", url, err)\n    }\n  )\n}\n\nfunction createSignedQueryString(token, request) {\n  const timestamp = (Date.now() / 1000) | 0\n\n  const params = {\n    auth_key: token.key,\n    auth_timestamp: timestamp,\n    auth_version: \"1.0\",\n  }\n\n  if (request.body) {\n    params.body_md5 = util.getMD5(request.body)\n  }\n\n  if (request.params) {\n    for (const key in request.params) {\n      if (RESERVED_QUERY_KEYS[key] !== undefined) {\n        throw Error(key + \" is a required parameter and cannot be overidden\")\n      }\n      params[key] = request.params[key]\n    }\n  }\n\n  const method = request.method.toUpperCase()\n  const sortedKeyVal = util.toOrderedArray(params)\n  let queryString = sortedKeyVal.join(\"&\")\n\n  const signData = [method, request.path, queryString].join(\"\\n\")\n  queryString += \"&auth_signature=\" + token.sign(signData)\n\n  return queryString\n}\n\nexports.send = send\nexports.createSignedQueryString = createSignedQueryString\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9yZXF1ZXN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsY0FBYyxtR0FBNkI7QUFDM0Msd0JBQXdCLDBIQUFtQzs7QUFFM0QsZUFBZSxtQkFBTyxDQUFDLDJEQUFVO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyx1REFBUTs7QUFFN0IsNkJBQTZCLG1CQUFPLENBQUMsNkRBQVc7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixvQkFBb0IsRUFBRSxLQUFLLEdBQUc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsWUFBWTtBQUNaLCtCQUErQiIsInNvdXJjZXMiOlsiL1VzZXJzL29iZWRrYWZmbHUvRG9jdW1lbnRzL0dpdEh1Yi9zZWVkY2x1Yi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9yZXF1ZXN0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZWR1bmRhbnQgZGVmYXVsdCBhcyBhIHdvcmthcm91bmQgZm9yIHRoaXMgV2ViUGFjayBidWc6XG4vLyBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay93ZWJwYWNrL2lzc3Vlcy80NzQyXG5jb25zdCBmZXRjaCA9IHJlcXVpcmUoXCJub2RlLWZldGNoXCIpLmRlZmF1bHRcbmNvbnN0IEFib3J0Q29udHJvbGxlciA9IHJlcXVpcmUoXCJhYm9ydC1jb250cm9sbGVyXCIpLmRlZmF1bHRcblxuY29uc3QgZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpXG5jb25zdCB1dGlsID0gcmVxdWlyZShcIi4vdXRpbFwiKVxuXG5jb25zdCBwdXNoZXJMaWJyYXJ5VmVyc2lvbiA9IHJlcXVpcmUoXCIuL3ZlcnNpb25cIilcblxuY29uc3QgUkVTRVJWRURfUVVFUllfS0VZUyA9IHtcbiAgYXV0aF9rZXk6IHRydWUsXG4gIGF1dGhfdGltZXN0YW1wOiB0cnVlLFxuICBhdXRoX3ZlcnNpb246IHRydWUsXG4gIGF1dGhfc2lnbmF0dXJlOiB0cnVlLFxuICBib2R5X21kNTogdHJ1ZSxcbn1cblxuZnVuY3Rpb24gc2VuZChjb25maWcsIG9wdGlvbnMpIHtcbiAgY29uc3QgbWV0aG9kID0gb3B0aW9ucy5tZXRob2RcbiAgY29uc3QgcGF0aCA9IGNvbmZpZy5wcmVmaXhQYXRoKG9wdGlvbnMucGF0aClcbiAgY29uc3QgYm9keSA9IG9wdGlvbnMuYm9keSA/IEpTT04uc3RyaW5naWZ5KG9wdGlvbnMuYm9keSkgOiB1bmRlZmluZWRcblxuICBjb25zdCB1cmwgPSBgJHtjb25maWcuZ2V0QmFzZVVSTCgpfSR7cGF0aH0/JHtjcmVhdGVTaWduZWRRdWVyeVN0cmluZyhcbiAgICBjb25maWcudG9rZW4sXG4gICAge1xuICAgICAgbWV0aG9kLFxuICAgICAgcGF0aCxcbiAgICAgIHBhcmFtczogb3B0aW9ucy5wYXJhbXMsXG4gICAgICBib2R5OiBib2R5LFxuICAgIH1cbiAgKX1gXG5cbiAgY29uc3QgaGVhZGVycyA9IHtcbiAgICBcIngtcHVzaGVyLWxpYnJhcnlcIjogXCJwdXNoZXItaHR0cC1ub2RlIFwiICsgcHVzaGVyTGlicmFyeVZlcnNpb24sXG4gIH1cblxuICBpZiAoYm9keSkge1xuICAgIGhlYWRlcnNbXCJjb250ZW50LXR5cGVcIl0gPSBcImFwcGxpY2F0aW9uL2pzb25cIlxuICB9XG5cbiAgbGV0IHNpZ25hbFxuICBsZXQgdGltZW91dFxuICBpZiAoY29uZmlnLnRpbWVvdXQpIHtcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpXG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCBjb25maWcudGltZW91dClcbiAgICBzaWduYWwgPSBjb250cm9sbGVyLnNpZ25hbFxuICB9XG5cbiAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgIG1ldGhvZCxcbiAgICBib2R5LFxuICAgIGhlYWRlcnMsXG4gICAgc2lnbmFsLFxuICAgIGFnZW50OiBjb25maWcuYWdlbnQsXG4gIH0pLnRoZW4oXG4gICAgKHJlcykgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpXG4gICAgICBpZiAocmVzLnN0YXR1cyA+PSA0MDApIHtcbiAgICAgICAgcmV0dXJuIHJlcy50ZXh0KCkudGhlbigoYm9keSkgPT4ge1xuICAgICAgICAgIHRocm93IG5ldyBlcnJvcnMuUmVxdWVzdEVycm9yKFxuICAgICAgICAgICAgXCJVbmV4cGVjdGVkIHN0YXR1cyBjb2RlIFwiICsgcmVzLnN0YXR1cyxcbiAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHJlcy5zdGF0dXMsXG4gICAgICAgICAgICBib2R5XG4gICAgICAgICAgKVxuICAgICAgICB9KVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc1xuICAgIH0sXG4gICAgKGVycikgPT4ge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpXG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlJlcXVlc3RFcnJvcihcIlJlcXVlc3QgZmFpbGVkIHdpdGggYW4gZXJyb3JcIiwgdXJsLCBlcnIpXG4gICAgfVxuICApXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNpZ25lZFF1ZXJ5U3RyaW5nKHRva2VuLCByZXF1ZXN0KSB7XG4gIGNvbnN0IHRpbWVzdGFtcCA9IChEYXRlLm5vdygpIC8gMTAwMCkgfCAwXG5cbiAgY29uc3QgcGFyYW1zID0ge1xuICAgIGF1dGhfa2V5OiB0b2tlbi5rZXksXG4gICAgYXV0aF90aW1lc3RhbXA6IHRpbWVzdGFtcCxcbiAgICBhdXRoX3ZlcnNpb246IFwiMS4wXCIsXG4gIH1cblxuICBpZiAocmVxdWVzdC5ib2R5KSB7XG4gICAgcGFyYW1zLmJvZHlfbWQ1ID0gdXRpbC5nZXRNRDUocmVxdWVzdC5ib2R5KVxuICB9XG5cbiAgaWYgKHJlcXVlc3QucGFyYW1zKSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gcmVxdWVzdC5wYXJhbXMpIHtcbiAgICAgIGlmIChSRVNFUlZFRF9RVUVSWV9LRVlTW2tleV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBFcnJvcihrZXkgKyBcIiBpcyBhIHJlcXVpcmVkIHBhcmFtZXRlciBhbmQgY2Fubm90IGJlIG92ZXJpZGRlblwiKVxuICAgICAgfVxuICAgICAgcGFyYW1zW2tleV0gPSByZXF1ZXN0LnBhcmFtc1trZXldXG4gICAgfVxuICB9XG5cbiAgY29uc3QgbWV0aG9kID0gcmVxdWVzdC5tZXRob2QudG9VcHBlckNhc2UoKVxuICBjb25zdCBzb3J0ZWRLZXlWYWwgPSB1dGlsLnRvT3JkZXJlZEFycmF5KHBhcmFtcylcbiAgbGV0IHF1ZXJ5U3RyaW5nID0gc29ydGVkS2V5VmFsLmpvaW4oXCImXCIpXG5cbiAgY29uc3Qgc2lnbkRhdGEgPSBbbWV0aG9kLCByZXF1ZXN0LnBhdGgsIHF1ZXJ5U3RyaW5nXS5qb2luKFwiXFxuXCIpXG4gIHF1ZXJ5U3RyaW5nICs9IFwiJmF1dGhfc2lnbmF0dXJlPVwiICsgdG9rZW4uc2lnbihzaWduRGF0YSlcblxuICByZXR1cm4gcXVlcnlTdHJpbmdcbn1cblxuZXhwb3J0cy5zZW5kID0gc2VuZFxuZXhwb3J0cy5jcmVhdGVTaWduZWRRdWVyeVN0cmluZyA9IGNyZWF0ZVNpZ25lZFF1ZXJ5U3RyaW5nXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/token.js":
/*!******************************************!*\
  !*** ./node_modules/pusher/lib/token.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const crypto = __webpack_require__(/*! crypto */ \"crypto\")\nconst util = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/pusher/lib/util.js\")\n\n/** Verifies and signs data against the key and secret.\n *\n * @constructor\n * @param {String} key app key\n * @param {String} secret app secret\n */\nclass Token {\n  constructor(key, secret) {\n    this.key = key\n    this.secret = secret\n  }\n  /** Signs the string using the secret.\n   *\n   * @param {String} string\n   * @returns {String}\n   */\n  sign(string) {\n    return crypto\n      .createHmac(\"sha256\", this.secret)\n      .update(Buffer.from(string))\n      .digest(\"hex\")\n  }\n  /** Checks if the string has correct signature.\n   *\n   * @param {String} string\n   * @param {String} signature\n   * @returns {Boolean}\n   */\n  verify(string, signature) {\n    return util.secureCompare(this.sign(string), signature)\n  }\n}\n\nmodule.exports = Token\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi90b2tlbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLG1CQUFPLENBQUMsc0JBQVE7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHVEQUFROztBQUU3QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vYmVka2FmZmx1L0RvY3VtZW50cy9HaXRIdWIvc2VlZGNsdWIvbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvdG9rZW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKVxuY29uc3QgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcblxuLyoqIFZlcmlmaWVzIGFuZCBzaWducyBkYXRhIGFnYWluc3QgdGhlIGtleSBhbmQgc2VjcmV0LlxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtTdHJpbmd9IGtleSBhcHAga2V5XG4gKiBAcGFyYW0ge1N0cmluZ30gc2VjcmV0IGFwcCBzZWNyZXRcbiAqL1xuY2xhc3MgVG9rZW4ge1xuICBjb25zdHJ1Y3RvcihrZXksIHNlY3JldCkge1xuICAgIHRoaXMua2V5ID0ga2V5XG4gICAgdGhpcy5zZWNyZXQgPSBzZWNyZXRcbiAgfVxuICAvKiogU2lnbnMgdGhlIHN0cmluZyB1c2luZyB0aGUgc2VjcmV0LlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nXG4gICAqIEByZXR1cm5zIHtTdHJpbmd9XG4gICAqL1xuICBzaWduKHN0cmluZykge1xuICAgIHJldHVybiBjcnlwdG9cbiAgICAgIC5jcmVhdGVIbWFjKFwic2hhMjU2XCIsIHRoaXMuc2VjcmV0KVxuICAgICAgLnVwZGF0ZShCdWZmZXIuZnJvbShzdHJpbmcpKVxuICAgICAgLmRpZ2VzdChcImhleFwiKVxuICB9XG4gIC8qKiBDaGVja3MgaWYgdGhlIHN0cmluZyBoYXMgY29ycmVjdCBzaWduYXR1cmUuXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmdcbiAgICogQHBhcmFtIHtTdHJpbmd9IHNpZ25hdHVyZVxuICAgKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAgICovXG4gIHZlcmlmeShzdHJpbmcsIHNpZ25hdHVyZSkge1xuICAgIHJldHVybiB1dGlsLnNlY3VyZUNvbXBhcmUodGhpcy5zaWduKHN0cmluZyksIHNpZ25hdHVyZSlcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFRva2VuXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/token.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/util.js":
/*!*****************************************!*\
  !*** ./node_modules/pusher/lib/util.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("const crypto = __webpack_require__(/*! crypto */ \"crypto\")\n\nfunction toOrderedArray(map) {\n  return Object.keys(map)\n    .map(function (key) {\n      return [key, map[key]]\n    })\n    .sort(function (a, b) {\n      if (a[0] < b[0]) {\n        return -1\n      }\n      if (a[0] > b[0]) {\n        return 1\n      }\n      return 0\n    })\n    .map(function (pair) {\n      return pair[0] + \"=\" + pair[1]\n    })\n}\n\nfunction getMD5(body) {\n  return crypto.createHash(\"md5\").update(body, \"utf8\").digest(\"hex\")\n}\n\nfunction secureCompare(a, b) {\n  if (a.length !== b.length) {\n    return false\n  }\n  let result = 0\n  for (const i in a) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i)\n  }\n  return result === 0\n}\n\nfunction isEncryptedChannel(channel) {\n  return channel.startsWith(\"private-encrypted-\")\n}\n\nexports.toOrderedArray = toOrderedArray\nexports.getMD5 = getMD5\nexports.secureCompare = secureCompare\nexports.isEncryptedChannel = isEncryptedChannel\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQyxzQkFBUTs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCLGNBQWM7QUFDZCxxQkFBcUI7QUFDckIsMEJBQTBCIiwic291cmNlcyI6WyIvVXNlcnMvb2JlZGthZmZsdS9Eb2N1bWVudHMvR2l0SHViL3NlZWRjbHViL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3V0aWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKVxuXG5mdW5jdGlvbiB0b09yZGVyZWRBcnJheShtYXApIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG1hcClcbiAgICAubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiBba2V5LCBtYXBba2V5XV1cbiAgICB9KVxuICAgIC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICBpZiAoYVswXSA8IGJbMF0pIHtcbiAgICAgICAgcmV0dXJuIC0xXG4gICAgICB9XG4gICAgICBpZiAoYVswXSA+IGJbMF0pIHtcbiAgICAgICAgcmV0dXJuIDFcbiAgICAgIH1cbiAgICAgIHJldHVybiAwXG4gICAgfSlcbiAgICAubWFwKGZ1bmN0aW9uIChwYWlyKSB7XG4gICAgICByZXR1cm4gcGFpclswXSArIFwiPVwiICsgcGFpclsxXVxuICAgIH0pXG59XG5cbmZ1bmN0aW9uIGdldE1ENShib2R5KSB7XG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaChcIm1kNVwiKS51cGRhdGUoYm9keSwgXCJ1dGY4XCIpLmRpZ2VzdChcImhleFwiKVxufVxuXG5mdW5jdGlvbiBzZWN1cmVDb21wYXJlKGEsIGIpIHtcbiAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIGxldCByZXN1bHQgPSAwXG4gIGZvciAoY29uc3QgaSBpbiBhKSB7XG4gICAgcmVzdWx0IHw9IGEuY2hhckNvZGVBdChpKSBeIGIuY2hhckNvZGVBdChpKVxuICB9XG4gIHJldHVybiByZXN1bHQgPT09IDBcbn1cblxuZnVuY3Rpb24gaXNFbmNyeXB0ZWRDaGFubmVsKGNoYW5uZWwpIHtcbiAgcmV0dXJuIGNoYW5uZWwuc3RhcnRzV2l0aChcInByaXZhdGUtZW5jcnlwdGVkLVwiKVxufVxuXG5leHBvcnRzLnRvT3JkZXJlZEFycmF5ID0gdG9PcmRlcmVkQXJyYXlcbmV4cG9ydHMuZ2V0TUQ1ID0gZ2V0TUQ1XG5leHBvcnRzLnNlY3VyZUNvbXBhcmUgPSBzZWN1cmVDb21wYXJlXG5leHBvcnRzLmlzRW5jcnlwdGVkQ2hhbm5lbCA9IGlzRW5jcnlwdGVkQ2hhbm5lbFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/version.js":
/*!********************************************!*\
  !*** ./node_modules/pusher/lib/version.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ../package.json */ \"(ssr)/./node_modules/pusher/package.json\").version\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFBLCtHQUFtRCIsInNvdXJjZXMiOlsiL1VzZXJzL29iZWRrYWZmbHUvRG9jdW1lbnRzL0dpdEh1Yi9zZWVkY2x1Yi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi92ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL3BhY2thZ2UuanNvblwiKS52ZXJzaW9uXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/lib/webhook.js":
/*!********************************************!*\
  !*** ./node_modules/pusher/lib/webhook.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/pusher/lib/errors.js\")\nconst Token = __webpack_require__(/*! ./token */ \"(ssr)/./node_modules/pusher/lib/token.js\")\n\n/** Provides validation and access methods for a WebHook.\n *\n * Before accessing WebHook data, check if it's valid. Otherwise, exceptions\n * will be raised from access methods.\n *\n * @constructor\n * @param {Token} primary token\n * @param {Object} request\n * @param {Object} request.headers WebHook HTTP headers with lower-case keys\n * @param {String} request.rawBody raw WebHook body\n */\nfunction WebHook(token, request) {\n  this.token = token\n\n  this.key = request.headers[\"x-pusher-key\"]\n  this.signature = request.headers[\"x-pusher-signature\"]\n  this.contentType = request.headers[\"content-type\"]\n  this.body = request.rawBody\n\n  if (this.isContentTypeValid()) {\n    try {\n      // Try to parse as JSON\n      this.data = JSON.parse(this.body)\n    } catch (e) {\n      // Do nothing\n    }\n  }\n}\n\n/** Checks whether the WebHook has valid body and signature.\n *\n * @param {Token|Token[]} list of additional tokens to be validated against\n * @returns {Boolean}\n */\nWebHook.prototype.isValid = function (extraTokens) {\n  if (!this.isBodyValid()) {\n    return false\n  }\n\n  extraTokens = extraTokens || []\n  if (!(extraTokens instanceof Array)) {\n    extraTokens = [extraTokens]\n  }\n\n  const tokens = [this.token].concat(extraTokens)\n  for (const i in tokens) {\n    let token = tokens[i]\n    if (token instanceof Token === false) {\n      token = new Token(token.key, token.secret)\n    }\n    if (this.key == token.key && token.verify(this.body, this.signature)) {\n      return true\n    }\n  }\n  return false\n}\n\n/** Checks whether the WebHook content type is valid.\n *\n * For now, the only valid WebHooks have content type of application/json.\n *\n * @returns {Boolean}\n */\nWebHook.prototype.isContentTypeValid = function () {\n  return this.contentType === \"application/json\"\n}\n\n/** Checks whether the WebHook content type and body is JSON.\n *\n * @returns {Boolean}\n */\nWebHook.prototype.isBodyValid = function () {\n  return this.data !== undefined\n}\n\n/** Returns all WebHook data.\n *\n * @throws WebHookError when WebHook is invalid\n * @returns {Object}\n */\nWebHook.prototype.getData = function () {\n  if (!this.isBodyValid()) {\n    throw new errors.WebHookError(\n      \"Invalid WebHook body\",\n      this.contentType,\n      this.body,\n      this.signature\n    )\n  }\n  return this.data\n}\n\n/** Returns WebHook events array.\n *\n * @throws WebHookError when WebHook is invalid\n * @returns {Object[]}\n */\nWebHook.prototype.getEvents = function () {\n  return this.getData().events\n}\n\n/** Returns WebHook timestamp.\n *\n * @throws WebHookError when WebHook is invalid\n * @returns {Date}\n */\nWebHook.prototype.getTime = function () {\n  return new Date(this.getData().time_ms)\n}\n\nmodule.exports = WebHook\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi93ZWJob29rLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsbUJBQU8sQ0FBQywyREFBVTtBQUNqQyxjQUFjLG1CQUFPLENBQUMseURBQVM7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9vYmVka2FmZmx1L0RvY3VtZW50cy9HaXRIdWIvc2VlZGNsdWIvbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvd2ViaG9vay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlcnJvcnMgPSByZXF1aXJlKFwiLi9lcnJvcnNcIilcbmNvbnN0IFRva2VuID0gcmVxdWlyZShcIi4vdG9rZW5cIilcblxuLyoqIFByb3ZpZGVzIHZhbGlkYXRpb24gYW5kIGFjY2VzcyBtZXRob2RzIGZvciBhIFdlYkhvb2suXG4gKlxuICogQmVmb3JlIGFjY2Vzc2luZyBXZWJIb29rIGRhdGEsIGNoZWNrIGlmIGl0J3MgdmFsaWQuIE90aGVyd2lzZSwgZXhjZXB0aW9uc1xuICogd2lsbCBiZSByYWlzZWQgZnJvbSBhY2Nlc3MgbWV0aG9kcy5cbiAqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7VG9rZW59IHByaW1hcnkgdG9rZW5cbiAqIEBwYXJhbSB7T2JqZWN0fSByZXF1ZXN0XG4gKiBAcGFyYW0ge09iamVjdH0gcmVxdWVzdC5oZWFkZXJzIFdlYkhvb2sgSFRUUCBoZWFkZXJzIHdpdGggbG93ZXItY2FzZSBrZXlzXG4gKiBAcGFyYW0ge1N0cmluZ30gcmVxdWVzdC5yYXdCb2R5IHJhdyBXZWJIb29rIGJvZHlcbiAqL1xuZnVuY3Rpb24gV2ViSG9vayh0b2tlbiwgcmVxdWVzdCkge1xuICB0aGlzLnRva2VuID0gdG9rZW5cblxuICB0aGlzLmtleSA9IHJlcXVlc3QuaGVhZGVyc1tcIngtcHVzaGVyLWtleVwiXVxuICB0aGlzLnNpZ25hdHVyZSA9IHJlcXVlc3QuaGVhZGVyc1tcIngtcHVzaGVyLXNpZ25hdHVyZVwiXVxuICB0aGlzLmNvbnRlbnRUeXBlID0gcmVxdWVzdC5oZWFkZXJzW1wiY29udGVudC10eXBlXCJdXG4gIHRoaXMuYm9keSA9IHJlcXVlc3QucmF3Qm9keVxuXG4gIGlmICh0aGlzLmlzQ29udGVudFR5cGVWYWxpZCgpKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFRyeSB0byBwYXJzZSBhcyBKU09OXG4gICAgICB0aGlzLmRhdGEgPSBKU09OLnBhcnNlKHRoaXMuYm9keSlcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBEbyBub3RoaW5nXG4gICAgfVxuICB9XG59XG5cbi8qKiBDaGVja3Mgd2hldGhlciB0aGUgV2ViSG9vayBoYXMgdmFsaWQgYm9keSBhbmQgc2lnbmF0dXJlLlxuICpcbiAqIEBwYXJhbSB7VG9rZW58VG9rZW5bXX0gbGlzdCBvZiBhZGRpdGlvbmFsIHRva2VucyB0byBiZSB2YWxpZGF0ZWQgYWdhaW5zdFxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cbldlYkhvb2sucHJvdG90eXBlLmlzVmFsaWQgPSBmdW5jdGlvbiAoZXh0cmFUb2tlbnMpIHtcbiAgaWYgKCF0aGlzLmlzQm9keVZhbGlkKCkpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIGV4dHJhVG9rZW5zID0gZXh0cmFUb2tlbnMgfHwgW11cbiAgaWYgKCEoZXh0cmFUb2tlbnMgaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICBleHRyYVRva2VucyA9IFtleHRyYVRva2Vuc11cbiAgfVxuXG4gIGNvbnN0IHRva2VucyA9IFt0aGlzLnRva2VuXS5jb25jYXQoZXh0cmFUb2tlbnMpXG4gIGZvciAoY29uc3QgaSBpbiB0b2tlbnMpIHtcbiAgICBsZXQgdG9rZW4gPSB0b2tlbnNbaV1cbiAgICBpZiAodG9rZW4gaW5zdGFuY2VvZiBUb2tlbiA9PT0gZmFsc2UpIHtcbiAgICAgIHRva2VuID0gbmV3IFRva2VuKHRva2VuLmtleSwgdG9rZW4uc2VjcmV0KVxuICAgIH1cbiAgICBpZiAodGhpcy5rZXkgPT0gdG9rZW4ua2V5ICYmIHRva2VuLnZlcmlmeSh0aGlzLmJvZHksIHRoaXMuc2lnbmF0dXJlKSkge1xuICAgICAgcmV0dXJuIHRydWVcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59XG5cbi8qKiBDaGVja3Mgd2hldGhlciB0aGUgV2ViSG9vayBjb250ZW50IHR5cGUgaXMgdmFsaWQuXG4gKlxuICogRm9yIG5vdywgdGhlIG9ubHkgdmFsaWQgV2ViSG9va3MgaGF2ZSBjb250ZW50IHR5cGUgb2YgYXBwbGljYXRpb24vanNvbi5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqL1xuV2ViSG9vay5wcm90b3R5cGUuaXNDb250ZW50VHlwZVZhbGlkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5jb250ZW50VHlwZSA9PT0gXCJhcHBsaWNhdGlvbi9qc29uXCJcbn1cblxuLyoqIENoZWNrcyB3aGV0aGVyIHRoZSBXZWJIb29rIGNvbnRlbnQgdHlwZSBhbmQgYm9keSBpcyBKU09OLlxuICpcbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5XZWJIb29rLnByb3RvdHlwZS5pc0JvZHlWYWxpZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuZGF0YSAhPT0gdW5kZWZpbmVkXG59XG5cbi8qKiBSZXR1cm5zIGFsbCBXZWJIb29rIGRhdGEuXG4gKlxuICogQHRocm93cyBXZWJIb29rRXJyb3Igd2hlbiBXZWJIb29rIGlzIGludmFsaWRcbiAqIEByZXR1cm5zIHtPYmplY3R9XG4gKi9cbldlYkhvb2sucHJvdG90eXBlLmdldERhdGEgPSBmdW5jdGlvbiAoKSB7XG4gIGlmICghdGhpcy5pc0JvZHlWYWxpZCgpKSB7XG4gICAgdGhyb3cgbmV3IGVycm9ycy5XZWJIb29rRXJyb3IoXG4gICAgICBcIkludmFsaWQgV2ViSG9vayBib2R5XCIsXG4gICAgICB0aGlzLmNvbnRlbnRUeXBlLFxuICAgICAgdGhpcy5ib2R5LFxuICAgICAgdGhpcy5zaWduYXR1cmVcbiAgICApXG4gIH1cbiAgcmV0dXJuIHRoaXMuZGF0YVxufVxuXG4vKiogUmV0dXJucyBXZWJIb29rIGV2ZW50cyBhcnJheS5cbiAqXG4gKiBAdGhyb3dzIFdlYkhvb2tFcnJvciB3aGVuIFdlYkhvb2sgaXMgaW52YWxpZFxuICogQHJldHVybnMge09iamVjdFtdfVxuICovXG5XZWJIb29rLnByb3RvdHlwZS5nZXRFdmVudHMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmdldERhdGEoKS5ldmVudHNcbn1cblxuLyoqIFJldHVybnMgV2ViSG9vayB0aW1lc3RhbXAuXG4gKlxuICogQHRocm93cyBXZWJIb29rRXJyb3Igd2hlbiBXZWJIb29rIGlzIGludmFsaWRcbiAqIEByZXR1cm5zIHtEYXRlfVxuICovXG5XZWJIb29rLnByb3RvdHlwZS5nZXRUaW1lID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gbmV3IERhdGUodGhpcy5nZXREYXRhKCkudGltZV9tcylcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBXZWJIb29rXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/pusher/lib/webhook.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/pusher/package.json":
/*!******************************************!*\
  !*** ./node_modules/pusher/package.json ***!
  \******************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"pusher","description":"Node.js client to interact with the Pusher Channels REST API","version":"5.2.0","author":"Pusher <support@pusher.com>","contributors":[{"name":"fabrik42","email":"fabrik42@gmail.com"},{"name":"Jaewoong Kim","email":"jwoongkim@gmail.com"},{"name":"Phil Leggetter","email":"phil@leggetter.co.uk"},{"name":"Paweł Ledwoń","email":"me@ludvik.pl"}],"dependencies":{"abort-controller":"^3.0.0","is-base64":"^1.1.0","node-fetch":"^2.6.1","tweetnacl":"^1.0.0","tweetnacl-util":"^0.15.0","@types/node-fetch":"^2.5.7"},"devDependencies":{"@types/node":"^14.14.6","eslint":"^7.11.0","expect.js":"=0.3.1","express":"^4.17.1","https-proxy-agent":"^5.0.0","mocha":"^7.2.0","nock":"^12.0.3","prettier":"2.1.2","sinon":"=1.10.2","webpack":"^4.42.1","webpack-cli":"^3.3.11"},"scripts":{"local-test":"npx mocha \'tests/integration/**/*.js\'","test":"npx mocha \'tests/{integration,remote}/**/*.js\'","lint":"npx eslint . && npx prettier --check .","format":"npx prettier --write ."},"keywords":["pusher","websockets","realtime"],"license":"MIT","repository":"git://github.com/pusher/pusher-http-node","main":"lib/pusher","typings":"index.d.ts","engines":{"node":">= 4.0.0"}}');

/***/ })

};
;